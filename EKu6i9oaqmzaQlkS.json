{
  "active": false,
  "connections": {
    "Partcipates": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Partcipates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "If row does not exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If row does not exist": {
      "main": [
        [
          {
            "node": "Insert row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert row": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-02T01:29:04.950Z",
  "id": "EKu6i9oaqmzaQlkS",
  "isArchived": false,
  "meta": null,
  "name": "Sync forms to Mongo",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "20476599-8ec2-4af9-ab57-083b89ae6bdd",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -384,
        -32
      ],
      "id": "fc97b50e-c0da-4c2c-9187-cf8da9913cfc",
      "name": "CodeML Form Submit",
      "webhookId": "20476599-8ec2-4af9-ab57-083b89ae6bdd"
    },
    {
      "parameters": {
        "content": "I added some sample mock data for trigger. Although, personally, I do not use the trigger's data. I loop through entire google sheets and add any new emails after this trigger is activated"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -544,
        128
      ],
      "id": "fcc6da3d-558f-4138-aa5c-a2d07510f349",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Here is the CodeML data",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -960,
        96
      ],
      "id": "6ff2b4f7-b80a-41bc-a896-1d6336df28e5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "deleteRows",
        "dataTableId": {
          "__rl": true,
          "value": "aRw6H4BjLtenJ2Qk",
          "mode": "list",
          "cachedResultName": "CodeML MongoImport",
          "cachedResultUrl": "/projects/1KxArspnjifF9NPY/datatables/aRw6H4BjLtenJ2Qk"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "email",
              "condition": "isEmpty"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -1184,
        64
      ],
      "id": "93042418-7b48-4365-b1b1-ed3615e0d8af",
      "name": "Delete row(s)"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1SEsmTorlmudNkf2cW4DVkENrE4kAb0XnwaLTJ7T5wLU",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2065923140,
          "mode": "list",
          "cachedResultName": "Réponses au formulaire 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SEsmTorlmudNkf2cW4DVkENrE4kAb0XnwaLTJ7T5wLU/edit#gid=2065923140"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1152,
        -384
      ],
      "id": "59bcf3ba-7f84-4022-9d6e-9124ea981881",
      "name": "Partcipates",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "J3rnaSuqLzWLHSYz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Add a new field called 'myNewField' to the JSON of the item\nconst item = {\n  email: $json[\"Adresse e-mail\"] || $json[\"Your email\\nVotre adresse email\"],\nname: $json[\"Full name\\nNom complet\"],\nschoolLevel: $json[\"Current school level or highest obtained\\nNiveau scolaire actuel ou plus haut diplôme obtenu\"],\nfieldOfStudy: $json[\"Your current field of study\\nVotre domaine d’études actuel\"],\nexperienceWithTechnologies: $json[\"Which technologies do you have experience with?\\nAvec quelles technologies avez-vous de l’expérience ?\"],\nselfEvaluationSkillLevel: $json[\"On a scale from 0 to 10, how would you evaluate your ML/AI skills and knowledge?\\nSur une échelle de 0 à 10, comment évalueriez-vous vos compétences et connaissances en IA/apprentissage automatique ?\"],\nparticipationReason: $json[\"Why do you want to participate?\\nPourquoi souhaitez-vous participer ?\"],\ntShirtSize: $json[\"Your T-shirt size/Votre taille de T-shirt (unisex)\"],\nlinkedInLink: $json[\"Your LinkedIn link/Votre lien LinkedIn\"],\ngithubLink: $json[\"Your GitHub link/Votre lien GitHub\"],\nresumeLink: $json[\"Your CV in PDF format\\nVotre CV en format PDF\"],\nfoodRestrictions: $json[\"Food restrictions/Restrictions alimentaires\"],\n}\n\nreturn item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -944,
        -384
      ],
      "id": "88f91a82-20d2-43b5-87ec-0e5c5f3d0b73",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1328,
        -384
      ],
      "id": "2846fd2b-c381-4427-8f8e-a127cfd48659",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "email",
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        -736,
        -384
      ],
      "id": "4dd79d4a-db99-4484-b140-4f850933a2f7",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://server-holy-pond-4966.fly.dev/auth/participant",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"email\": \"{{$('If row does not exist').item.json.email}}\",\n  \"role\": \"participant\",\n  \"name\": \"{{$('If row does not exist').item.json.name}}\",\n  \"schoolLevel\": \"{{$('If row does not exist').item.json.schoolLevel}}\",\n  \"fieldOfStudy\": \"{{$('If row does not exist').item.json.fieldOfStudy}}\",\n  \"experienceWithTechnologies\": \"{{$('If row does not exist').item.json.experienceWithTechnologies}}\",\n  \"selfEvaluationSkillLevel\": \"{{$('If row does not exist').item.json.selfEvaluationSkillLevel}}\",\n  \"participationReason\": \"{{$('If row does not exist').item.json.participationReason}}\",\n  \"tShirtSize\": \"{{$('If row does not exist').item.json.tShirtSize || 'L'}}\",\n  \"linkedInLink\": \"{{$('If row does not exist').item.json.linkedInLink}}\",\n  \"githubLink\": \"{{$('If row does not exist').item.json.githubLink}}\",\n  \"resumeLink\": \"{{$('If row does not exist').item.json.resumeLink}}\",\n  \"foodRestrictions\": \"{{$('If row does not exist').item.json.foodRestrictions}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -112,
        -384
      ],
      "id": "6d7c30d2-6de7-4044-a8e4-93d03c63f64f",
      "name": "HTTP Request",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "rowNotExists",
        "dataTableId": {
          "__rl": true,
          "value": "aRw6H4BjLtenJ2Qk",
          "mode": "list",
          "cachedResultName": "CodeML MongoImport",
          "cachedResultUrl": "/projects/1KxArspnjifF9NPY/datatables/aRw6H4BjLtenJ2Qk"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "email",
              "keyValue": "={{ $json.email }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -528,
        -384
      ],
      "id": "4503afa1-41dd-46a1-b2bc-15783f8b8fee",
      "name": "If row does not exist"
    },
    {
      "parameters": {
        "dataTableId": {
          "__rl": true,
          "value": "aRw6H4BjLtenJ2Qk",
          "mode": "list",
          "cachedResultName": "CodeML MongoImport",
          "cachedResultUrl": "/projects/1KxArspnjifF9NPY/datatables/aRw6H4BjLtenJ2Qk"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "email": "={{ $json.email }}"
          },
          "matchingColumns": [
            "email"
          ],
          "schema": [
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -320,
        -384
      ],
      "id": "300d3d7c-e4f5-4ea2-8f8f-6943484b5d2a",
      "name": "Insert row"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://server-holy-pond-4966.fly.dev/auth/participant",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"email\": \"{{$json.email}}\",\n  \"role\": \"participant\",\n  \"name\": \"{{$json.name}}\",\n  \"schoolLevel\": \"{{$json.schoolLevel}}\",\n  \"fieldOfStudy\": \"{{$json.fieldOfStudy}}\",\n  \"experienceWithTechnologies\": \"{{$json.experienceWithTechnologies}}\",\n  \"selfEvaluationSkillLevel\": \"{{$json.selfEvaluationSkillLevel}}\",\n  \"participationReason\": \"{{$json.participationReason}}\",\n  \"tShirtSize\": \"{{$json.tShirtSize || 'L'}}\",\n  \"linkedInLink\": \"{{$json.linkedInLink}}\",\n  \"githubLink\": \"{{$json.githubLink}}\",\n  \"resumeLink\": \"{{$json.resumeLink}}\",\n  \"foodRestrictions\": \"{{$json.foodRestrictions}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        -192
      ],
      "id": "74803479-dff6-4107-ac8a-d051f39ea90c",
      "name": "HTTP Request1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Add a new field called 'myNewField' to the JSON of the item\nconst item = {\n  email: \"taihnihal@gmail.com\",\nname: \"Nihal Taih\",\nschoolLevel: \" \",\nfieldOfStudy: \" \",\nexperienceWithTechnologies: \" \",\nselfEvaluationSkillLevel: \" \",\nparticipationReason: \" \",\ntShirtSize: \" \",\nlinkedInLink: \" \",\ngithubLink: \" \",\nresumeLink: \" \",\nfoodRestrictions: \" \",\n}\n\nreturn item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -832,
        -192
      ],
      "id": "bd932522-b88a-46e7-8ebe-5bb6b85d2823",
      "name": "Code in JavaScript1"
    }
  ],
  "origin": "n8n",
  "pinData": {
    "CodeML Form Submit": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.n8npolyai.ca",
            "x-real-ip": "35.187.143.69",
            "x-forwarded-for": "35.187.143.69",
            "x-forwarded-proto": "https",
            "content-length": "1289",
            "content-type": "application/json",
            "user-agent": "Mozilla/5.0 (compatible; Google-Apps-Script; beanserver; +https://script.google.com; id: UAEmdDd-L0ehcecPG-3wu1fOTX0bcPQuOUe8)",
            "accept-encoding": "gzip, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "spreadsheetId": "1SEsmTorlmudNkf2cW4DVkENrE4kAb0XnwaLTJ7T5wLU",
            "sheetName": "Réponses au formulaire 1",
            "submittedBy": "comitepolyai@gmail.com",
            "submittedAt": "2025-10-02T01:56:43.670Z",
            "responses": [
              "01/10/2025 21:56:42",
              "lightningbeat80@gmail.com",
              "",
              "test",
              "lightningbeat80@gmail.com",
              "High school/École secondaire",
              "Polytechnique Montréal",
              "Software engineering/Génie logiciel",
              "Python",
              "10",
              "test",
              "Friends/Amis",
              "Vegetarian/Végétarien",
              "S",
              "https://www.linkedin.com/in/alexander-roberge",
              "",
              "https://drive.google.com/open?id=1_C2Mkafrcn7ROR94m6apNBeXJyuXN45B",
              "I consent for PolyAI to share my CV with the companies sponsoring the event/J’accepte que PolyAI partage mon CV avec les entreprises sponsorisant l’événement.",
              "I consent for PolyAI to take pictures of the event that I might be in/J’accepte que PolyAI prenne des photos de l’événement sur lesquelles je pourrais apparaître.",
              "I agree not to share any data or information obtained during the event unless official authorization is given by both PolyAI's executive staff and the owner of the data/J’accepte de ne partager aucune donnée ou information obtenue lors de l’événement sans l’autorisation officielle à la fois de l’équipe exécutive de PolyAI et du propriétaire des données.",
              "test"
            ]
          },
          "webhookUrl": "https://n8n.n8npolyai.ca/webhook-test/d9b151b8-7c2b-4809-8526-b190a52ba14b",
          "executionMode": "test"
        }
      }
    ]
  },
  "repo": {
    "owner": "operationspolyai",
    "name": "n8n-backup-v2"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-02T01:29:04.952Z",
      "updatedAt": "2025-10-02T01:29:04.952Z",
      "role": "workflow:owner",
      "workflowId": "EKu6i9oaqmzaQlkS",
      "projectId": "1KxArspnjifF9NPY"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-10-02T01:40:11.040Z",
      "updatedAt": "2025-10-02T01:40:11.040Z",
      "id": "UJLN9QCfCgyUh2VV",
      "name": "CodeML"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-10-11T16:13:12.000Z",
  "versionId": "b25edec0-0dc7-44a1-8d80-aacc13c021de"
}