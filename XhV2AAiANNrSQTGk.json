{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Select rows from a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        []
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-17T23:54:33.652Z",
  "id": "XhV2AAiANNrSQTGk",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Send Discord CV",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "b0b5b35e-261c-4fdc-a78c-716117f00fe6",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "30b28810-8e6e-4cd1-9f9a-4369b43d97f8",
      "name": "Webhook",
      "webhookId": "b0b5b35e-261c-4fdc-a78c-716117f00fe6"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "LearnMembers",
          "mode": "list",
          "cachedResultName": "LearnMembers"
        },
        "where": {
          "values": [
            {
              "column": "learnml_code",
              "value": "={{ $json.body.responses[1] }}"
            },
            {
              "column": "role",
              "value": "Participate"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        208,
        0
      ],
      "id": "b5966879-76c5-4387-b11d-a55583b05f38",
      "name": "Select rows from a table",
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1417165264461762563",
          "mode": "list",
          "cachedResultName": "LearnML 2025",
          "cachedResultUrl": "https://discord.com/channels/1417165264461762563"
        },
        "channelId": {
          "__rl": true,
          "value": "1418021455874228384",
          "mode": "list",
          "cachedResultName": "üìúsoumettre-cv",
          "cachedResultUrl": "https://discord.com/channels/1417165264461762563/1418021455874228384"
        },
        "content": "={{ $json.formatted }}",
        "options": {
          "flags": [
            "SUPPRESS_EMBEDS",
            "SUPPRESS_NOTIFICATIONS"
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        736,
        16
      ],
      "id": "fa95e696-2a0b-4489-9f6c-87e5ce25430f",
      "name": "Send a message",
      "webhookId": "268aac23-3c51-42d4-843b-a79ca64a6961",
      "credentials": {
        "discordBotApi": {
          "id": "cxGK7pRlQxV7O0GJ",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const item = $input.first().json;\n\n// Ensure links are Discord-friendly (fully qualified)\nfunction normalizeUrl(url) {\n  if (!url) return \"\";\n  let u = String(url).trim();\n  if (!u) return \"\";\n\n  // If it already has a scheme (e.g., https://, http://, mailto:, tel:), keep it\n  if (/^[a-z][a-z0-9+.+-]*:/.test(u)) return u;\n\n  // If it's protocol-relative (starts with //), assume https\n  if (/^\\/\\//.test(u)) return \"https:\" + u;\n\n  // Otherwise, prepend https://\n  return \"https://\" + u.replace(/^\\/+/, \"\");\n}\n\n// Helper to safely add lines\nfunction addLine(prefix, value, suffix = \"\") {\n  if (!value) return \"\";\n  const v = Array.isArray(value) ? value.filter(Boolean).join(\", \") : value;\n  return `${prefix}${v}${suffix}\\n`;\n}\n\nlet output = `## ${item.name}\\n`;\n\noutput += addLine(\"üìç \", item.school);\noutput += addLine(\"üéì \", item.study, item.school_level ? ` *${item.school_level}*` : \"\");\noutput += addLine(\"üëÄ \", item.tech_experience);\n\n// Links (only add if present), normalized for Discord\nconst linkedIn = normalizeUrl(item.LinkedIn);\nconst gitHub   = normalizeUrl(item.GitHub);\nconst cv       = normalizeUrl(item.CV);\n\nif (linkedIn) output += `- [LinkedIn](${linkedIn})\\n`;\nif (gitHub)   output += `- [GitHub](${gitHub})\\n`;\nif (cv)       output += `- [CV](${cv})\\n`;\n\nreturn [{ json: { formatted: output.trim() } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        16
      ],
      "id": "508546a7-c95a-413b-b0d6-13f45a857699",
      "name": "Code in JavaScript"
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "operationspolyai",
    "name": "n8n-backup-v2"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-17T23:54:33.656Z",
      "updatedAt": "2025-09-17T23:54:33.656Z",
      "role": "workflow:owner",
      "workflowId": "XhV2AAiANNrSQTGk",
      "projectId": "1KxArspnjifF9NPY"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-15T22:57:19.790Z",
      "updatedAt": "2025-09-15T22:57:19.790Z",
      "id": "HSLYlejXa7chb6L9",
      "name": "LearnML"
    },
    {
      "createdAt": "2025-09-15T22:57:07.793Z",
      "updatedAt": "2025-09-15T22:57:07.793Z",
      "id": "LcPqd2vpWXLOYZdI",
      "name": "Discord Bot"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-19T13:11:46.000Z",
  "versionId": "d4ee36d9-b7cb-42c7-8d69-03257514b5e0"
}