{
  "active": true,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get rows in sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If adding new person": {
      "main": [
        [
          {
            "node": "Add rows to Members",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert or update rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find department ID": {
      "main": [
        [
          {
            "node": "Add row to MemberDepartment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find role ID": {
      "main": [
        [
          {
            "node": "Add row to MemberRole",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add rows to Members": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add row to MemberRole": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get new id of member just added",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get new id of member just added": {
      "main": [
        [
          {
            "node": "Split the list of departments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add row to MemberDepartment": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get rows in sheets": {
      "main": [
        [
          {
            "node": "Get last row in sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get last row in sheets": {
      "main": [
        [
          {
            "node": "If adding new person",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Split the list of roles",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Find department ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split the list of departments": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split the list of roles": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Find role ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get rows in sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-15T20:34:26.425Z",
  "id": "WZs1AjLXHzCttqmN",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Add Member",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2800,
        416
      ],
      "id": "c58b6006-e074-4c7f-ad2f-ed9112afbcfe",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "06b18281-7d24-4796-ac6b-f403599ebc5f",
              "leftValue": "={{ $json['SQL ID'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2128,
        352
      ],
      "id": "cd48b764-d9ce-44c3-9b68-b2a0040983b8",
      "name": "If adding new person"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Members",
          "mode": "list",
          "cachedResultName": "Members"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ClickUpID": "={{ $json.clickUpId }}",
            "name": "={{ $json.name }}",
            "email": "={{ $json.email }}"
          },
          "matchingColumns": [
            "ClickUpID"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "ClickUpID",
              "displayName": "ClickUpID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1904,
        416
      ],
      "id": "65e6a8d4-6b4e-4be9-a507-850f0cbe29e7",
      "name": "Insert or update rows in a table",
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Department",
          "mode": "list",
          "cachedResultName": "Department"
        },
        "where": {
          "values": [
            {
              "column": "departmentName",
              "value": "={{ $json.Department.slice(3) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -784,
        256
      ],
      "id": "cbb900ea-fd6c-4404-a1bf-b44202446c64",
      "name": "Find department ID",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Role",
          "mode": "list",
          "cachedResultName": "Role"
        },
        "where": {
          "values": [
            {
              "column": "roleName",
              "value": "={{ $json.Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -336,
        -16
      ],
      "id": "de30331a-d50c-42b0-960b-06c2d6b9a4ca",
      "name": "Find role ID",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Members",
          "mode": "list",
          "cachedResultName": "Members"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Get rows in sheets').item.json['Full Name (first, last)'] }}",
            "email": "={{ $('Get rows in sheets').item.json.Email }}",
            "phone_number": "={{ $('Get rows in sheets').item.json['Phone Number'] ? $('Get rows in sheets').item.json['Phone Number'] : null }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "ClickUpID",
              "displayName": "ClickUpID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1904,
        224
      ],
      "id": "b3646ead-a490-45c2-9b57-692f3937541b",
      "name": "Add rows to Members",
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "MemberRole",
          "mode": "list",
          "cachedResultName": "MemberRole"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "memberID": "={{ $('Get new id of member just added').all()[0].json.id }}",
            "roleID": "={{ $('Find role ID').item.json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "memberID",
              "displayName": "memberID",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "roleID",
              "displayName": "roleID",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -112,
        64
      ],
      "id": "8fa6f596-91c9-44aa-af6f-45d231392eb9",
      "name": "Add row to MemberRole",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1680,
        224
      ],
      "id": "c936144f-7dda-4038-a5af-a206164b2577",
      "name": "Wait",
      "webhookId": "1aa53d4a-c3c5-4c5e-b92b-93bafc492c81"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Members",
          "mode": "list",
          "cachedResultName": "Members"
        },
        "where": {
          "values": [
            {
              "column": "email",
              "value": "={{ $('Get rows in sheets').item.json.Email }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1456,
        224
      ],
      "id": "032cbe81-9eaa-42af-8bd4-c51c08ea21c2",
      "name": "Get new id of member just added",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "MemberDepartment",
          "mode": "list",
          "cachedResultName": "MemberDepartment"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "memberID": "={{ $('Get new id of member just added').all()[0].json.id }}",
            "departmentID": "={{ $('Find department ID').item.json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "memberID",
              "displayName": "memberID",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "departmentID",
              "displayName": "departmentID",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -560,
        272
      ],
      "id": "8997e695-b0c2-4587-95ad-becd9492cd0c",
      "name": "Add row to MemberDepartment",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "tcgfUQhBwsAuROjj",
          "name": "Postgres account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1kQ_SjgxAaC6KRbzLnzMa5DJPcJGjE5YxVE0wcwyLCkM",
          "mode": "list",
          "cachedResultName": "Add/update member to club (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kQ_SjgxAaC6KRbzLnzMa5DJPcJGjE5YxVE0wcwyLCkM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 707898479,
          "mode": "list",
          "cachedResultName": "Form Responses 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kQ_SjgxAaC6KRbzLnzMa5DJPcJGjE5YxVE0wcwyLCkM/edit#gid=707898479"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -2576,
        352
      ],
      "id": "dae33bf0-4867-47b9-9c2d-b0982ccd81ed",
      "name": "Get rows in sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "J3rnaSuqLzWLHSYz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -2352,
        352
      ],
      "id": "a93779dd-24e3-48eb-b392-f64030e338de",
      "name": "Get last row in sheets"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1008,
        224
      ],
      "id": "39fbbf1b-d79e-4611-9cd3-f6eab240aca0",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// Pull the Department field from the earlier node\nconst deptString = $('Get last row in sheets').first().json.Department || \"\";\n\n// Split string into an array and trim each entry\nconst departments = deptString.split(',').map(d => d.trim());\n\n// Return one item per department\nreturn departments.map(d => ({\n  json: { Department: d }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1232,
        224
      ],
      "id": "8a6a01c9-c899-4d5e-976e-f670d3515edd",
      "name": "Split the list of departments"
    },
    {
      "parameters": {
        "jsCode": "// Pull the Role field from the earlier node\nconst roleString = $('Get last row in sheets').first().json.Role || \"\";\n\n// Split string into an array and trim each entry\nconst roles = roleString.split(',').map(r => r.trim());\n\n// Return one item per role\nreturn roles.map(r => ({\n  json: { Role: r }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -784,
        64
      ],
      "id": "0ab58c79-dfe4-4def-8b8e-cade333c4ef7",
      "name": "Split the list of roles"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -560,
        64
      ],
      "id": "f3880a7b-de51-4a92-a5f1-750208e71ca8",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c3fd5a29-3e4a-435c-834d-3166c0f425ad",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2800,
        224
      ],
      "id": "9df23663-82de-41c0-8309-74c1fc11dbec",
      "name": "Webhook",
      "webhookId": "c3fd5a29-3e4a-435c-834d-3166c0f425ad"
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "operationspolyai",
    "name": "n8n-backup-v2"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-15T20:34:26.427Z",
      "updatedAt": "2025-09-15T20:34:26.427Z",
      "role": "workflow:owner",
      "workflowId": "WZs1AjLXHzCttqmN",
      "projectId": "1KxArspnjifF9NPY"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-15T20:35:44.000Z",
  "versionId": "b49e41c4-edcf-48a4-ace1-9f5645eadb48"
}